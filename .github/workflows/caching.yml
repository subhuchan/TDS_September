# GitHub Action with Dependency Caching
name: CI with Caching

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-with-cache"
  build-with-cache:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up uv for Python package management
      - name: Set up uv
        uses: astral-sh/setup-uv@v5
      
      # Create virtual environment
      - name: Create virtual environment
        run: uv venv

      # Cache uv dependencies using the specific cache key
      - name: Cache uv dependencies
        uses: actions/cache@v4
        id: cache-uv # Give the step an id to check its output
        with:
          path: ~/.cache/uv
          key: cache-3003784

      # Install dependencies from requirements.txt
      - name: Install dependencies
        run: uv pip install -r requirements.txt

      # The required step with specific name for cache priming verification
      - name: prime-cache-3003784
        run: |
          echo "=== Cache Priming Step for 23f3003784@ds.study.iitm.ac.in ==="
          if [[ "${{ steps.cache-uv.outputs.cache-hit }}" == "true" ]]; then
            echo "✅ Cache hit! Dependencies were restored from cache."
            echo "Cache key: cache-3003784"
          else
            echo "❌ Cache miss. Dependencies were installed and cache will be saved."
            echo "Cache key: cache-3003784"
          fi
          echo "Cache priming step completed successfully!"
          
      # Additional step to verify the installation worked
      - name: Verify installation
        run: |
          echo "Verifying installed packages..."
          uv pip list
          echo "Installation verification completed!"

      # Optional: Run a simple test to use the cached dependencies
      - name: Test cached dependencies
        run: |
          uv run python -c "import pandas; import numpy; import fastapi; print('All dependencies imported successfully!')"